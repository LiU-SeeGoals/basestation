/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_SSL_WRAPPER_PB_H_INCLUDED
#define PB_SSL_WRAPPER_PB_H_INCLUDED
#include <pb.h>
#include "ssl_detection.pb.h"
#include "ssl_geometry.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SSL_WrapperPacket {
    bool has_detection;
    SSL_DetectionFrame detection;
    bool has_geometry;
    SSL_GeometryData geometry;
} SSL_WrapperPacket;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SSL_WrapperPacket_init_default           {false, SSL_DetectionFrame_init_default, false, SSL_GeometryData_init_default}
#define SSL_WrapperPacket_init_zero              {false, SSL_DetectionFrame_init_zero, false, SSL_GeometryData_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define SSL_WrapperPacket_detection_tag          1
#define SSL_WrapperPacket_geometry_tag           2

/* Struct field encoding specification for nanopb */
#define SSL_WrapperPacket_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  detection,         1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  geometry,          2)
#define SSL_WrapperPacket_CALLBACK NULL
#define SSL_WrapperPacket_DEFAULT NULL
#define SSL_WrapperPacket_detection_MSGTYPE SSL_DetectionFrame
#define SSL_WrapperPacket_geometry_MSGTYPE SSL_GeometryData

extern const pb_msgdesc_t SSL_WrapperPacket_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SSL_WrapperPacket_fields &SSL_WrapperPacket_msg

/* Maximum encoded size of messages (where known) */
#if defined(SSL_DetectionFrame_size) && defined(SSL_GeometryData_size)
#define SSL_WRAPPER_PB_H_MAX_SIZE                SSL_WrapperPacket_size
#define SSL_WrapperPacket_size                   (12 + SSL_DetectionFrame_size + SSL_GeometryData_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
